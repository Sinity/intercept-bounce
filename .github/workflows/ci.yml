# .github/workflows/ci.yml
name: Rust CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build_and_test:
    name: Build and Test (Nix)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cachix # Optional: speeds up builds by caching Nix derivations
        uses: cachix/cachix-action@v15
        with:
          # Replace 'intercept-bounce' with your actual Cachix cache name
          name: intercept-bounce
          # If your cache is private, uncomment and set the secret in GitHub repo settings
          # authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Check formatting (Nix)
        run: nix develop .# --command cargo fmt -- --check

      - name: Run Linter (Clippy - Nix)
        run: nix develop .# --command cargo clippy --all-targets --release -- --deny warnings

      - name: Run Tests (Nix)
        run: nix develop .# --command cargo test --all-targets --release -- --nocapture

      - name: Build Nix package
        run: nix build .#packages.x86_64-linux.default --verbose

      # Optional: Add a step to build checks if defined in flake.nix
      # - name: Build Nix Checks
      #   run: nix build .#checks.x86_64-linux.default
