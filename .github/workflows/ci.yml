name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for vergen

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Configure Cachix
        uses: cachix/cachix-action@v15
        with:
          name: sinity
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build, Lint, and Test
        run: |
          # Build the primary package. This also runs `xtask generate-docs`
          # due to the preBuild hook in flake.nix.
          echo "::group::Building Package (nix build)"
          nix build .#intercept-bounce -L
          echo "::endgroup::"

          # Run rust-checks (includes rustfmt, clippy, alejandra, gitleaks)
          # This uses our direct implementation in flake.nix instead of pre-commit
          echo "::group::Running Rust Checks (nix build .#checks.$(nix eval --impure --expr 'builtins.currentSystem').rust-checks)"
          nix build .#checks.$(nix eval --impure --expr 'builtins.currentSystem').rust-checks -L
          echo "::endgroup::"

          # Run remaining checks and tests using the dev shell aliases
          echo "Running additional checks and tests within nix develop environment..."
          nix develop . --command bash -c "
            set -ex

            echo '::group::Dependency Audit (ca)'
            ca
            echo '::endgroup::'

            echo '::group::Unused Dependencies Check (cu)'
            cu
            echo '::endgroup::'

            # cargo nextest run --workspace runs all tests by default
            echo '::group::Running Tests with Nextest (nt)'
            nt
            echo '::endgroup::'
          "
